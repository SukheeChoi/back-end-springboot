{"version":3,"file":"js/menu03.64c9ca9f.js","mappings":"wpBAoCE,MAAMA,GAASC,EAAAA,EAAAA,IAAI,IAGnB,SAASC,IACPC,QAAQC,IAAI,mBAMd,SAASC,EAAWC,EAASC,GAC3BJ,QAAQC,IAAI,mBACZD,QAAQC,IAAI,YAAcE,GAC1BH,QAAQC,IAAIG,GACZJ,QAAQC,IAAI,iBAAmBG,EAAMC,QACrCL,QAAQC,IAAI,eAAiBG,EAAME,MAGrC,SAASC,EAAYH,GACnBJ,QAAQC,IAAI,yBACZD,QAAQC,IAAI,UAAYG,GACxBJ,QAAQC,IAAI,sBAAwBG,EAAMC,OAAOG,MACjDR,QAAQC,IAAI,uBAAyBG,EAAMC,OAAOI,OAGpD,SAASC,IACPV,QAAQC,IAAI,cAGd,SAASU,IACPX,QAAQC,IAAI,c,oxBC/DhB,MAAMW,EAAc,EAEpB,S,2tBCsCE,MAAMf,GAASC,EAAAA,EAAAA,IAAI,IACbe,GAAUf,EAAAA,EAAAA,IAAI,CAClBU,KAAM,GACJM,QAAS,GACTC,MAAO,IAyCX,SAASC,IACPH,EAAQJ,MAAQ,CACdD,KAAM,GACJM,QAAS,GACTC,MAAO,G,OAzCbE,EAAAA,EAAAA,IAAMpB,GAAQ,CAACqB,EAAWC,KACxBnB,QAAQoB,MAAM,gBACdpB,QAAQC,IAAI,cAAeiB,GAC3BlB,QAAQC,IAAI,cAAekB,GAC3BnB,QAAQqB,eAIVJ,EAAAA,EAAAA,IAAMJ,GACA,CAACS,EAAYC,KACiBvB,QAAQoB,MAAM,iBACdpB,QAAQC,IAAI,eAAgBqB,GAC5BtB,QAAQC,IAAI,eAAgBsB,GAC5BvB,QAAQqB,aAER,CAACG,MAAK,KAI1CP,EAAAA,EAAAA,KAAM,IAAMJ,EAAQJ,MAAMD,OAAM,CAACiB,EAASC,KACc1B,QAAQoB,MAAM,8BACdpB,QAAQC,IAAI,iBAAkBwB,GAC9BzB,QAAQC,IAAI,YAAayB,GACzB1B,QAAQqB,eAKhEJ,EAAAA,EAAAA,IAAM,CAACpB,EAAQgB,IAAU,EAAEK,EAAWI,IAAcH,EAAWI,MACnCvB,QAAQoB,MAAM,mBACdpB,QAAQC,IAAI,QAAS,CAACiB,EAAWI,IACjCtB,QAAQC,IAAI,QAAS,CAACkB,EAAWI,IACjCvB,QAAQqB,aAER,CAACG,MAAK,I,+5BClFpC,MAAMZ,EAAc,EAEpB","sources":["webpack://front-end-vue/./src/views/menu03/Exam01EventHandling.vue","webpack://front-end-vue/./src/views/menu03/Exam01EventHandling.vue?efde","webpack://front-end-vue/./src/views/menu03/Exam02Watch.vue","webpack://front-end-vue/./src/views/menu03/Exam02Watch.vue?3b92"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      Exam01EventHandling\n    </div>\n    <div class=\"card-body\">\n      <div>\n        <h6>[Event Handling]</h6>\n        <button @click=\"handleBtn1\" class=\"btn btn-info btn-sm mr-2\">버튼1</button>\n        <button @click=\"handleBtn2('vue is good', $event)\" class=\"btn btn-info btn-sm mr-2\">버튼2</button>\n      </div>\n\n      <div>\n        <h6>[DOM Event 객체 참조]</h6>\n        <input type=\"text\" name=\"userId\" :value=\"userId\" @keyup=\"handleInput($event)\"/>\n        <br/>\n        입력 내용: {{userId}}\n      </div>\n\n      <div>\n        <h6>[이벤트 수식어 사용]</h6>\n        <a href=\"https://vuejs.org/guide/introduction.html\" @click.prevent=\"handleLink\">링크</a>\n        <form action=\"https://vuejs.org/guide/introduction.html\" @submit.prevent=\"handleForm\">\n          <input type=\"text\" v-model=\"userId\" /> <br />\n          <input type=\"submit\" value=\"제출\" class=\"btn btn-success btn-sm mt-2\" />\n        </form>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from \"vue\";\n\n  // 반응형 속성 선언\n  const userId = ref('');\n\n  // 메소드 선언\n  function handleBtn1() {\n    console.log('handleBtn1() 실행');\n    // console.log(event);\n    // console.log('event.target: ' + event.target);\n    // console.log('event.type: ' + event.type);\n  }\n\n  function handleBtn2(message, event) {\n    console.log('handleBtn2() 실행');\n    console.log('message: ' + message);\n    console.log(event);\n    console.log('event.target: ' + event.target);\n    console.log('event.type: ' + event.type);\n  }\n\n  function handleInput(event) {\n    console.log('handleInput(event) 실행');\n    console.log('event: ' + event);\n    console.log('event.target.name: ' + event.target.name);\n    console.log('event.target.value: ' + event.target.value);\n  }\n\n  function handleLink() {\n    console.log(\"handleLink\");\n  }\n\n  function handleForm() {\n    console.log(\"handleForm\");\n  }\n\n</script>\n\n<style scoped>\n</style>","import script from \"./Exam01EventHandling.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam01EventHandling.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      Exam02Watch\n    </div>\n    <div class=\"card-body\">\n      <div class=\"form-group row\">\n          <label class=\"col-sm-2 col-form-label\">UserId</label>\n          <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" v-model=\"userId\">\n          </div>\n      </div>\n      <hr/>\n      <form>      \n        <div class=\"form-group row\">\n          <label class=\"col-sm-2 col-form-label\">Name</label>\n          <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" v-model=\"product.name\">\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-sm-2 col-form-label\">Company</label>\n          <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" v-model=\"product.company\">\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-sm-2 col-form-label\">Price</label>\n          <div class=\"col-sm-10\">\n            <input type=\"number\" class=\"form-control\" v-model.number=\"product.price\">\n          </div>\n        </div>\n      </form> \n      <hr/>\n      <button @click=\"handleButton\" class=\"btn btn-info btn-sm\">product 객체 변경</button>     \n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { ref, watch } from \"vue\";\n\n  // 반응형 속성 선언\n  const userId = ref('');\n  const product = ref({\n    name: ''\n    , company: ''\n    , price: 0\n  });\n\n  // 값 타입의 속성 감시 설정\n  watch(userId, (newUserId, oldUserId) => {\n    console.group('userId 변경 감시');\n    console.log('newUserId: ', newUserId);\n    console.log('oldUserId: ', oldUserId);\n    console.groupEnd();\n  });\n\n  // 객체 타입의 속성 감시 설정\n  watch(product\n      , (newProduct, oldProduct) => {\n                                      console.group('product 변경 감시');\n                                      console.log('newProduct: ', newProduct);\n                                      console.log('oldProduct: ', oldProduct);\n                                      console.groupEnd();\n                                    }\n                                    , {deep:true}\n      );\n  \n  // 객체 타입의 속성 일부 감시 설정\n  watch(() => product.value.name, (newName, oldName) => {\n                                                          console.group('product 객체의 name속성 값 변경 감시');\n                                                          console.log('newName.name: ', newName);\n                                                          console.log('oldName: ', oldName);\n                                                          console.groupEnd();\n                                                        }\n      );\n\n  // 멀티 반응형 속성 감시 설정\n  watch([userId, product], ([newUserId, newProduct], [oldUserId, oldProduct]) => {\n                              console.group('멀티 반응형 속성 감시 설정');\n                              console.log('new: ', [newUserId, newProduct]);\n                              console.log('old: ', [oldUserId, oldProduct]);\n                              console.groupEnd();\n                            }\n                            , {deep:true}\n  );\n\n  function handleButton() {\n    product.value = {\n      name: ''\n      , company: ''\n      , price: 0\n    };\n  }\n\n</script>\n\n<style scoped>\n</style>","import script from \"./Exam02Watch.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam02Watch.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["userId","ref","handleBtn1","console","log","handleBtn2","message","event","target","type","handleInput","name","value","handleLink","handleForm","__exports__","product","company","price","handleButton","watch","newUserId","oldUserId","group","groupEnd","newProduct","oldProduct","deep","newName","oldName"],"sourceRoot":""}