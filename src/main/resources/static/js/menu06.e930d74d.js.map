{"version":3,"file":"js/menu06.e930d74d.js","mappings":"mgBA+BE,MAAMA,GAAQC,EAAAA,EAAAA,MAEd,SAASC,IACP,OAAOF,EAAMG,MAAMC,OAIrB,MAAMC,GAAiBC,EAAAA,EAAAA,KAAS,IACvBN,EAAMG,MAAMC,SAIfA,GAASG,EAAAA,EAAAA,IAAI,IAEnB,SAASC,IACPR,EAAMS,OAAO,YAAaL,EAAOM,OAGnC,SAASC,IACPX,EAAMY,SAAS,mBAAoB,CAACR,OAAQA,EAAOM,MAAOG,SAAU,M,k8BC/CxE,MAAMC,EAAc,EAEpB,S,8aC2BA,MAAMd,GAAQC,EAAAA,EAAAA,MAEd,SAASc,IACP,OAAOf,EAAMG,MAAMa,QAAQC,MAK7B,MAAMC,GAAgBZ,EAAAA,EAAAA,KAAS,IACtBN,EAAMG,MAAMa,QAAQC,QAIvBP,GAAQH,EAAAA,EAAAA,IAAI,GAElB,SAASY,IACPnB,EAAMS,OAAO,mBAAoBC,EAAMA,OAGzC,SAASU,IACPpB,EAAMY,SAAS,0BAA2B,CAACF,MAAMA,EAAMA,MAAOG,SAAS,M,4hCCjDzE,MAAMC,EAAc,EAEpB","sources":["webpack://front-end-vue/./src/views/menu06/Exam01RootState.vue","webpack://front-end-vue/./src/views/menu06/Exam01RootState.vue?67d7","webpack://front-end-vue/./src/views/menu06/Exam02CounterState.vue","webpack://front-end-vue/./src/views/menu06/Exam02CounterState.vue?779f"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      Exam01RootState\n    </div>\n    <div class=\"card-body\">\n      <div>\n        <h6>[Root State 읽기]</h6>\n        <p>userId 단방향 바인딩: {{$store.state.userId}}</p>\n        <p>userId 단방향 바인딩: {{store.state.userId}}</p>\n        <p>userId 단방향 바인딩: {{store.getters.getUserId}}</p>\n        <p>userId 단방향 바인딩: {{getUserId()}}</p>\n        <p>userId 단방향 바인딩: {{computedUserId}}</p>\n        <p>userId 양방향 바인딩: <input type=\"text\" v-model=\"$store.state.userId\"/></p>\n      </div>\n      <hr/>\n      <div>\n        <h6>[Root State 변경]</h6>\n        <p>userId 변경값 입력: <input type=\"text\" v-model=\"userId\"/></p>\n        <div>\n          <button @click=\"changeUserIdByMutation\" class=\"btn btn-info btn-sm mr-2\">userId 변경(Mutation 동기 방식)</button>\n          <button @click=\"changeUserIdByAction\" class=\"btn btn-info btn-sm mr-2\">userId 변경(Action 비동기 방식)</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { useStore } from 'vuex';\n  import { computed, ref } from 'vue';\n  const store = useStore();\n\n  function getUserId() {\n    return store.state.userId;\n    // return store.getters.getUserId;\n  }\n\n  const computedUserId = computed(() => {\n    return store.state.userId;\n    // return store.getters.getUserId;\n  });\n\n  const userId = ref('');\n\n  function changeUserIdByMutation() {\n    store.commit('setUserId', userId.value);\n  }\n\n  function changeUserIdByAction() {\n    store.dispatch('setUserIdByAsync', {userId: userId.value, duration: 3000});\n  }\n\n</script>\n\n<style scoped>\n</style>","import script from \"./Exam01RootState.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam01RootState.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      Exam02CounterState\n    </div>\n    <div class=\"card-body\">\n      <div>\n        <h6>[Counter State 읽기]</h6>\n        <p>counter/count 단방향 바인딩: {{$store.state.counter.count}}</p>\n        <p>counter/count 단방향 바인딩: {{store.state.counter.count}}</p>\n        <p>counter/count 단방향 바인딩: {{store.getters['counter/getCount']}}</p>\n        <p>counter/count 단방향 바인딩: {{getCount()}}</p>\n        <p>counter/count 단방향 바인딩: {{computedCount}}</p>\n        <p>counter/count 양방향 바인딩: <input type=\"text\" v-model=\"$store.state.counter.count\"/></p>\n      </div>\n      <hr/>\n      <div>\n        <h6>[Counter State 변경]</h6>\n        <p>count 증가값 입력: <input type=\"text\" v-model.number=\"value\"/></p>\n        <div>\n          <button @click=\"changeCountByMutation\" class=\"btn btn-info btn-sm mr-2\">count 변경(Mutation 동기 방식)</button>\n          <button @click=\"changeCountByAction\" class=\"btn btn-info btn-sm mr-2\">count 변경(Action 비동기 방식)</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useStore } from 'vuex';\nimport { computed, ref } from 'vue';\n\nconst store = useStore();\n\nfunction getCount() {\n  return store.state.counter.count;\n  // return store.getters['counter/getCount'];\n}\n\n// 위의 getCount() 와 같은 값을 리턴하지만, 양방향 바인딩을 지원하는 아래 코드를 권장함.\nconst computedCount = computed(() => {\n  return store.state.counter.count;\n  // return store.getters['counter/getCount'];\n});\n\nconst value = ref(1);\n\nfunction changeCountByMutation() {\n  store.commit('counter/setCount', value.value);\n}\n\nfunction changeCountByAction() {\n  store.dispatch('counter/setCountByAsync', {value:value.value, duration:3000});\n}\n\n</script>\n\n<style scoped>\n</style>","import script from \"./Exam02CounterState.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam02CounterState.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","getUserId","state","userId","computedUserId","computed","ref","changeUserIdByMutation","commit","value","changeUserIdByAction","dispatch","duration","__exports__","getCount","counter","count","computedCount","changeCountByMutation","changeCountByAction"],"sourceRoot":""}